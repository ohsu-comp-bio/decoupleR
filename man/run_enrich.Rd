% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statistic-enricher.R
\name{run_enrich}
\alias{run_enrich}
\title{Enricher Python module used to predict the activity of regulatory proteins}
\usage{
run_enrich(
  mat,
  network,
  .source = .data$source,
  .target = .data$target,
  .mor = .data$mor,
  .likelihood = .data$likelihood,
  minsize = 5,
  scaler_type = NULL,
  enr_type = "total_enrichment",
  enr_weights = "weights.tsv",
  ...
)
}
\arguments{
\item{mat}{Matrix to evaluate (e.g. expression matrix).
Target nodes in rows and conditions in columns.
\code{rownames(mat)} must have at least one intersection with the elements
in \code{network} \code{.target} column.}

\item{network}{Tibble or dataframe with edges and it's associated metadata.}

\item{.source}{Column with source nodes.}

\item{.target}{Column with target nodes.}

\item{.mor}{Column with edge mode of regulation (i.e. mor).}

\item{.likelihood}{Deprecated argument. Now it will always be set to 1.}

\item{scaler_type}{Character indicating whether to scale and by what method to scale dataset}

\item{enr_type}{Character indicating which enrichment slot to use}

\item{enr_weights}{Character indicating out file handle for enrichment regulon weights}

\item{cohort}{Character, cohort to be processed.}

\item{regulon_size}{Integer indicating the minimum number of targets allowed per
regulon.}

\item{thresh.filter}{Float, Prior to normalization remove features that have a standard deviation per feature less
than {thresh_filter}}
}
\value{
A long format tibble of the enrichment scores for each source
across the samples. Resulting tibble contains the following columns:
\enumerate{
\item \code{statistic}: Indicates which method is associated with which score.
\item \code{source}: Source nodes of \code{network}.
\item \code{condition}: Condition representing each column of \code{mat}.
\item \code{score}: Regulatory activity (enrichment score).
}
}
\description{
Calculates regulatory activities using Enricher
}
\details{
This function is a wrapper for the python method \code{\link[=enricher.enrich]{enricher.enrich()}}.
}
\examples{
inputs_dir <- system.file("testdata", "inputs", package = "decoupleR")

mat <- readRDS(file.path(inputs_dir, "input-expr_matrix.rds"))
network <- readRDS(file.path(inputs_dir, "input-dorothea_genesets.rds"))

run_enrich(mat, network, .source='tf', verbose = FALSE)
}
\seealso{
Other decoupleR statistics: 
\code{\link{decouple}()},
\code{\link{run_aucell}()},
\code{\link{run_fgsea}()},
\code{\link{run_gsva}()},
\code{\link{run_mdt}()},
\code{\link{run_mlm}()},
\code{\link{run_ora}()},
\code{\link{run_udt}()},
\code{\link{run_ulm}()},
\code{\link{run_viper}()},
\code{\link{run_wmean}()},
\code{\link{run_wsum}()}
}
\concept{decoupleR statistics}
